---
  title: "Demographic Table"
order: 1
---
  
  ```{r setup script, include=FALSE, purl=FALSE}
invisible_hook_purl <- function(before, options, ...) {knitr::hook_purl(before, options, ...); NULL}
knitr::knit_hooks$set(purl = invisible_hook_purl)
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

This guide will show you how pharmaverse packages, along with some from tidyverse, can be used to create a Demographic table, using the `{pharmaverseadam}` `ADSL` data as an input.

In the examples below, we illustrate two general approaches for creating a demographics table.
The first utilizes Analysis Results Datasets---part of the emerging [CDISC Analyis Results Standard](https://www.cdisc.org/standards/foundational/analysis-results-standard).
The second is the classic method of creating summary tables directly from a data set.

## Data preprocessing

Now we will add some pre-processing to create some extra formatted variables ready for display in the table.

```{r preproc}
#| message: false
library(dplyr)
library(gtsummary)

# Create categorical variables, 
# remove screen failures, and assign column labels
adsl <- pharmaverseadam::adsl |>
  filter(!ACTARM %in% "Screen Failure") |>
  mutate(
    SEX = case_match(SEX, "M" ~ "MALE", "F" ~ "FEMALE"),
    AGEGR1 =
      case_when(
        between(AGE, 18, 40) ~ "18-40",
        between(AGE, 41, 64) ~ "41-64",
        AGE > 64 ~ ">=65"
      ) |>
      factor(levels = c("18-40", "41-64", ">=65"))
  ) |> 
  labelled::set_variable_labels(AGE = "Age (yr)",
                                AGEGR1 = "Age group",
                                SEX = "Sex",
                                RACE = "Race")
```



#### Table

One may also build the demographics in the classic way using 
`gtsummary::tbl_summary()` from a data frame, then extract the ARD from the table object.

```{r gtsummary}
# build demographics table directly from a data frame
adsl |> 
  tbl_summary(by = ACTARM, 
              include = c(AGE, AGEGR1, SEX, RACE))
```
